#!/usr/bin/perl -w

#
# Copyright (C) 2006-2014 Brian Elliott Finley <brian@thefinleys.com>
#

use strict;
use Getopt::Long;
use File::Basename;

use lib "/usr/lib/simple-state-manager";
use SimpleStateManager;

our %o;
our %outstanding;

# Do this before GetOptions mucks up ARGV. -BEF-
store_invocation_command();

GetOptions( 
    "help"                              => \$o{help},
    "version"                           => \$o{version},
    "config|state-definition-file=s"    => \$o{config_file},
    "sync|sync-state"                   => \$o{sync_state},
    "summary"                           => \$o{summary},
    "yes"                               => \$o{yes},
    "no|n"                              => \$o{no},
    "debug"                             => \$o{debug},
    "op|only-packages"                  => \$o{only_packages},
    "of|only-files"                     => \$o{only_files},
    "otf|only-this-file=s@"             => \$o{only_this_file},
    "af|add-file=s@"                    => \$o{add_file},
    "analyze-config"                    => \$o{analyze_config},
    "no-pkg-repo-update"                => \$o{no_pkg_repo_update},
) or usage() and exit(1);

my $error_level = 0;
my $changes_made = -1;

validate_options();
main();

exit 0;


################################################################################
#
#   Subroutines
#
sub main {

    my $outstanding_change_count;
    our $PASS_NUMBER = 0;

    if($o{add_file}) {

        read_config_file();

        ($error_level, $changes_made) = add_new_files();

        if( $main::o{debug} ) { 
            ssm_print "ssm:main(), add_new_files results:\n";
            ssm_print "  \$changes_made:            $changes_made\n";
            ssm_print "  \$error_level:             $error_level\n";
            ssm_print "\n";
        }
        ssm_print "-------------------------------\n";
        ssm_print "Added $changes_made files.\n";
        ssm_print "Encountered $error_level errors.\n";

        ssm_print qq(\n);

        email_log_file();

        exit $error_level;


    } elsif($o{sync_state}) {

        my $outstanding_changes = -1;
        my $prior_outstanding_changes = -1;

        # Iterate as long as changes are happening each go-round. -BEF-
        until( ($changes_made == 0) and ($outstanding_changes eq $prior_outstanding_changes) ) {

            $PASS_NUMBER++;

            read_config_file();
        
            #
            # Ok, let's go ahead and sync that state...
            #
            $prior_outstanding_changes = $outstanding_changes;

            ($error_level, $changes_made) = sync_state();

            $outstanding_changes = 0;
            $outstanding_change_count = 0;

            foreach (keys %outstanding) {
                $outstanding_changes .= "  $outstanding{$_}  $_\n";
                $outstanding_change_count++ if($outstanding{$_} eq 'b0rken');
            }
        
            if( $main::o{debug} ) { 
                ssm_print "ssm:sync_state results:\n";
                ssm_print "  \$changes_made:                $changes_made\n";
                ssm_print "  \$error_level:                 $error_level\n";
                ssm_print "  \$outstanding_changes:         $outstanding_change_count\n";
                ssm_print "  -------------------------------------------\n";
                ssm_print "$outstanding_changes";
                ssm_print "  -------------------------------------------\n";
                ssm_print "\n";
                sleep 3;
            }

            # First pass gathers info and status of deps
            # Second pass shows output
            last if( $o{no} and $PASS_NUMBER == 2 );

            # The looping can go by so fast it's confusing if running
            # interactively.
            sleep 1 unless( $o{yes} or $o{no});;
        }
    }


    ssm_print "-------------------------------\n";
    ssm_print "Total outstanding changes: $outstanding_change_count\n";

    if($error_level > 0) {
        ssm_print qq(\n);
        ssm_print qq(         Please check the output above, and address anything that is\n);
        ssm_print qq(         "Not OK", then give it another whirl.\n);
    }

    ssm_print qq(\n);

    email_log_file();

    return 1;
}


sub validate_options {

    # Can't use ssm_print in here -- not initialized yet. -BEF-

    if($o{'help'})    { usage()   and exit(0); }
    if($o{'version'}) { version() and exit(0); }

    unless( user_is_root() ) {
        usage();
        print "\n";
        print "Must run as root!\n";
        print "\n";
        exit 1;
    }

    unless($o{sync_state} or $o{analyze_config} or $o{add_file} or $o{summary}) { 
        usage();
        print "\n";
        print "Try one of the following:\n";
        print "\n";
        print "  --sync\n";
        print "  --summary\n";
        print "  --add-file\n";
        print "  --analyze-config\n";
        print "\n";
        exit(1);
    }

    if($o{sync_state} and $o{analyze_config}) { 
        print "\n";
        print "INFO:    The --analyze-config option implies --sync.  In this case,\n";
        print "         the --sync option is unnecessary.  Proceeding anyway...\n";
        print "\n";
        sleep 1;
    }


    if($o{only_files} and $o{only_packages}) { 
        usage();
        print "\n";
        print "The --only-files and --only-packages options conflict.  Use one or the other.\n";
        print "\n";
        exit(1);
    }

    if( $o{only_this_file} and $o{only_packages}) { 
        usage();
        print "\n";
        print "The --only-this-file and --only-packages options conflict.  Use one or the other.\n";
        print "\n";
        exit(1);
    }

    if( $o{only_this_file} and $o{only_files}) { 
        print "\n";
        print "INFO:    The --only-this-file implies --only-files.  In this case,\n";
        print "         the --only-files option is unnecessary.  Proceeding anyway...\n";
        print "\n";
        sleep 1;
    }

    if( $o{add_file} and $o{sync_state}) { 
        print "\n";
        print " The --add-file option overrides the --sync option.  Proceeding\n";
        print " with --add-file.\n";
        print "\n";
        undef $o{sync_state};
    }

    if( $o{add_file} and $o{only_packages}) { 
        usage();
        print "\n";
        print "The --add-file and --only-packages options conflict.  Use one or the other.\n";
        print "\n";
        exit(1);
    }

    if($o{yes} and $o{no}) { 
        usage();
        print "\n";
        print "The --yes and --no options conflict.  Use one or the other.\n";
        print "\n";
        exit(1);
    }

    if($o{yes} and $o{analyze_config}) { 
        usage();
        print "\n";
        print "The --yes and --analyze-config (implies --no) options conflict.  Use one or the other.\n";
        print "\n";
        exit(1);
    }

    if($o{yes} and $o{summary}) { 
        usage();
        print "\n";
        print "The --yes and --summary (implies --no) options conflict.  Use one or the other.\n";
        print "\n";
        exit(1);
    }

    if($o{analyze_config}) { 
        $o{sync_state} = 1; 
        $o{no} = 1; 
    }

    if($o{summary}) { 
        $o{sync_state} = 1; 
        $o{no} = 1; 
    }

    #
    # Handle this common user error situation in a friendly way.  Note
    # the missing "--config" argument. -BEF-
    #
    #   ssm --sync http://mgt/my-config-file.conf
    #
    # So we assume that the user meant this:
    #
    #   ssm --sync --config http://mgt/my-config-file.conf
    #
    if(! $o{config_file} and $ARGV[0]) {
        $o{config_file} = $ARGV[0];
    }

    return 1;
}


sub usage {
    my $progname = basename($0);
    version();
    print <<EOF;
SYNOPSIS
    $progname [OPTIONS...]

DESCRIPTION
    $progname 

OPTIONS

    Options can be presented in any order and may be abbreviated to
    shortest uniqueness.
    
    --help             

        Display this output.
    
    --version          

        Display version and copyright information.
    
    --sync

        Bring this machine's state in sync with it's state definition
        file.
    
    --op, --only-packages

        Only sync packages.  Don't sync files.
    
    --of, --only-files

        Only sync files.  Don't sync packages.
    
    --otf, --only-this-file FILE [--only-this-file FILE...]

        Only sync this particular file.  Don't sync packages.  May be
        used multiple times to specify multiple files.

        Example:  --otf /etc/file1.txt --otf /etc/file2.txt
    
    --af, --add-file FILE [--add-file FILE...]

        Adds file to the base definition file.  May be used multiple
        times to specify multiple files.

        Example:  --af /etc/file1.txt --af /etc/file2.txt

    --config URL

        Where URL is the location of the configuration file (state
        definition file) you want to use with this client.  The URL can
        be in one of the following forms, and the configuration files
        can be named anything you like:
    
         https://server.example.com/ssm_repo/computenodes.conf
          http://server.example.com/ssm_repo/myhost.example.com
           ftp://server.example.com/ssm_repo/fabrication-floor-appliance
          file:///etc/ssm/localhost
    
        Defaults to the URL specified in /etc/ssm/defaults.
    
    --yes

        Answer "yes" to all questions.
    
        Note: Does not install packages that are undefined, even if the
        package manager wants to install them.  Must go interactive
        (omit --yes) to be prompted for installation of undefined
        packages.
    
    --no

        Answer "no" to all questions.  Don't make any changes to the
        system.  (Well, if a newer version is available, it will still
        upgrade the 'ssm' package itself.)
    
    --summary

        Implies "--no" and "--sync".  Does not include diff output on
        files that are out of sync.  Only shows a one line summary for
        each configuration element.

    --debug

        Show each command as it is being run.
    
    --analyze-config

        Output details about where config elements are defined, and what
        their priorities are.  Implies the options --sync and --no.
    
    --no-pkg-repo-update

        Don't fetch updated package availability data from your system's
        subscribed package repositories.  This options can be useful if
        your system cannot currently access it's package repositories or
        if you want to preserve the current package version levels.
        
    
SEE ALSO

    For details on the /etc/ssm/defaults file, which points a client
    at it's state definition config file, just open it up and edit it.
    It includes instructions right there in it's comments:

        /etc/ssm/defaults

    For details on state definition config files, where all the really
    fun stuff happens, please see:

        /usr/share/doc/simple-state-manager/examples/safe_to_run_example_config_file.conf
    
    Also take a look at:

        https://github.com/finley/SSM/blob/master/README.md


BUGS

    Report bugs and suggestions at: https://github.com/finley/SSM/issues

    Or send email to: Brian Elliott Finley <brian\@thefinleys.com>

EOF

    return 1;
}

sub store_invocation_command {

    my $cmd = "$0";
    foreach(@ARGV) {
        $cmd .= " $_";
    }

    $o{invocation_command} = $cmd;

    return 1;
}

#  vi:set filetype=perl:
