#
#   vim:set tw=0:
#

# On each system type tested
test_dir=$(mktemp -d --tmpdir=/tmp ssm.XXX)
repo_dir=$test_dir/etc/ssm
conf=$repo_dir/testy.conf

echo
echo
echo BEGIN Regression Testing
echo
echo "Test Dir:  $test_dir"
echo "Repo Dir:  $repo_dir"
echo "Test Conf: $conf"
echo

mkdir -p $repo_dir
rsync -av usr/share/doc/examples/ $repo_dir/
cat usr/share/doc/examples/safe_to_run_example_config_file.conf > $conf

#
# Usage:  
#
#   cmd="your command"
#   run_cmd
#
run_cmd() {
    echo
    echo "<<<<<<<<<<<<<<<<<<<<<<<<< BEGIN >>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo CMD: $cmd
    $cmd
    echo "<<<<<<<<<<<<<<<<<<<<<<<<< END >>>>>>>>>>>>>>>>>>>>>>>>>>>>"
    echo ">> RECAP:  $cmd"
    test -z "$expectations" || echo ">> EXPECT: $expectations"
    unset expectations
    echo
    echo -n "Hit <Enter> to continue..." ; read x
}

cmd="sudo ssm -c $conf --sync --summary"
expectations="Expect 4 warnings, 3 OK, the rest Not OK"
run_cmd

cmd="sudo ssm -c $conf --sync --no"
run_cmd

cmd="sudo ssm -c $conf --sync --yes"
run_cmd
expectations="Expect all OK."

test_file=$test_dir/test_file.txt
cmd="sudo ssm -c $conf --add-file $test_file"
expectations="Expect 1 errors as $test_file hasn't been created yet."
run_cmd

echo "Creating the test file" > $test_file
cmd="sudo ssm -c $conf --add-file $test_file"
expectations="Expect 0 errors now that $test_file has been created."
run_cmd

ln -s $test_file ${test_file}.symlink
cmd="sudo ssm -c $conf --add-file ${test_file}.symlink"
expectations="Expect 0 errors"
run_cmd

newdir=$test_dir/test_dir/
sudo mkdir -p $newdir
cmd="sudo sudo ssm -c $conf --add-file $newdir"
expectations="Expect 0 errors"
run_cmd

rm -f $test_file
sudo rm -f $test_file
cmd="sudo ssm -c $conf --sync --only-this-file $test_file --yes"
expectations="Expect 1 Not OK then 1 OK"
run_cmd

sudo rm -f ${test_file}.symlink 
cmd="sudo ssm -c $conf --sync --only-files --yes"
expectations="Expect all OK"
run_cmd

cmd="sudo ssm -c $conf --sync --summary"
expectations="Expect all OK"
run_cmd

# rm -fr $test_dir

